openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9080/bankingapp
  description: Generated server url
paths:
  /api/v1/users/changePassword:
    post:
      tags:
      - user-controller
      operationId: changePasswordByAccountId
      parameters:
      - name: accountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/User'
  /api/v1/transactions:
    get:
      tags:
      - transaction-controller
      operationId: getAllTransactions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
    post:
      tags:
      - transaction-controller
      operationId: depositOrWithdrawAmount
      parameters:
      - name: accountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Transaction'
  /api/v1/transactions/transfer:
    post:
      tags:
      - transaction-controller
      operationId: transferAmount
      parameters:
      - name: fromAccountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: toAccountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Transaction'
  /api/v1/accounts:
    get:
      tags:
      - account-controller
      operationId: getAllAccounts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'
    post:
      tags:
      - account-controller
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Account'
  /api/v1/accounts/{id}:
    get:
      tags:
      - account-controller
      operationId: getAccountById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Account'
    post:
      tags:
      - account-controller
      operationId: updateAccountById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Account'
    delete:
      tags:
      - account-controller
      operationId: deleteAccountById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                enum:
                - 100 CONTINUE
                - 101 SWITCHING_PROTOCOLS
                - 102 PROCESSING
                - 103 EARLY_HINTS
                - 103 CHECKPOINT
                - 200 OK
                - 201 CREATED
                - 202 ACCEPTED
                - 203 NON_AUTHORITATIVE_INFORMATION
                - 204 NO_CONTENT
                - 205 RESET_CONTENT
                - 206 PARTIAL_CONTENT
                - 207 MULTI_STATUS
                - 208 ALREADY_REPORTED
                - 226 IM_USED
                - 300 MULTIPLE_CHOICES
                - 301 MOVED_PERMANENTLY
                - 302 FOUND
                - 302 MOVED_TEMPORARILY
                - 303 SEE_OTHER
                - 304 NOT_MODIFIED
                - 305 USE_PROXY
                - 307 TEMPORARY_REDIRECT
                - 308 PERMANENT_REDIRECT
                - 400 BAD_REQUEST
                - 401 UNAUTHORIZED
                - 402 PAYMENT_REQUIRED
                - 403 FORBIDDEN
                - 404 NOT_FOUND
                - 405 METHOD_NOT_ALLOWED
                - 406 NOT_ACCEPTABLE
                - 407 PROXY_AUTHENTICATION_REQUIRED
                - 408 REQUEST_TIMEOUT
                - 409 CONFLICT
                - 410 GONE
                - 411 LENGTH_REQUIRED
                - 412 PRECONDITION_FAILED
                - 413 PAYLOAD_TOO_LARGE
                - 413 REQUEST_ENTITY_TOO_LARGE
                - 414 URI_TOO_LONG
                - 414 REQUEST_URI_TOO_LONG
                - 415 UNSUPPORTED_MEDIA_TYPE
                - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                - 417 EXPECTATION_FAILED
                - 418 I_AM_A_TEAPOT
                - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                - 420 METHOD_FAILURE
                - 421 DESTINATION_LOCKED
                - 422 UNPROCESSABLE_ENTITY
                - 423 LOCKED
                - 424 FAILED_DEPENDENCY
                - 425 TOO_EARLY
                - 426 UPGRADE_REQUIRED
                - 428 PRECONDITION_REQUIRED
                - 429 TOO_MANY_REQUESTS
                - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                - 500 INTERNAL_SERVER_ERROR
                - 501 NOT_IMPLEMENTED
                - 502 BAD_GATEWAY
                - 503 SERVICE_UNAVAILABLE
                - 504 GATEWAY_TIMEOUT
                - 505 HTTP_VERSION_NOT_SUPPORTED
                - 506 VARIANT_ALSO_NEGOTIATES
                - 507 INSUFFICIENT_STORAGE
                - 508 LOOP_DETECTED
                - 509 BANDWIDTH_LIMIT_EXCEEDED
                - 510 NOT_EXTENDED
                - 511 NETWORK_AUTHENTICATION_REQUIRED
  /api/v1/users:
    get:
      tags:
      - user-controller
      operationId: getUserByAccountId
      parameters:
      - name: accountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/User'
  /api/v1/transactions/transaction-history:
    get:
      tags:
      - transaction-controller
      operationId: getAllTransactionsByAccountId
      parameters:
      - name: accountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
  /api/v1/balances:
    get:
      tags:
      - balance-controller
      operationId: getLatestBalanceByAccountId
      parameters:
      - name: accountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Balance'
  /api/v1/balances/latest:
    get:
      tags:
      - balance-controller
      operationId: getLatestBalances
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Balance'
  /api/v1/balances/balance-history:
    get:
      tags:
      - balance-controller
      operationId: getBalanceHistoryByAccountId
      parameters:
      - name: accountId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Balance'
  /api/v1/accounts/search:
    get:
      tags:
      - account-controller
      operationId: getAccountsByNameLike
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'
  /login:
    post:
      tags:
      - login-endpoint
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uname:
          type: string
        password:
          type: string
        roles:
          type: string
        status:
          type: string
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        address:
          type: string
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        description:
          type: string
        amount:
          type: integer
          format: int32
        debitCreditIndicator:
          type: string
        account:
          $ref: '#/components/schemas/Account'
    Balance:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        amount:
          type: integer
          format: int32
        debitCreditIndicator:
          type: string
